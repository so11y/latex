// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`binaryExpression > &  不支持的运算符__(5) 1`] = `
[
  {
    "message": "不支持位运算等符号",
  },
]
`;

exports[`binaryExpression > * 号运算__(2) 1`] = `[]`;

exports[`binaryExpression > **  不支持的运算符__(7) 1`] = `
[
  {
    "message": "不支持位运算等符号",
  },
]
`;

exports[`binaryExpression > + 号运算__(0) 1`] = `[]`;

exports[`binaryExpression > / 号运算__(3) 1`] = `[]`;

exports[`binaryExpression > |  不支持的运算符__(6) 1`] = `
[
  {
    "message": "不支持位运算等符号",
  },
]
`;

exports[`binaryExpression > - 号运算__(1) 1`] = `[]`;

exports[`binaryExpression > 1 + '1'__(8) 1`] = `
[
  {
    "message": "运算两边需要是数值或者函数调用表达式或者运算",
  },
]
`;

exports[`binaryExpression > 复杂运算在三元表达式中__(4) 1`] = `[]`;

exports[`conditionalExpression > Conditional语法糖__(3) 1`] = `[]`;

exports[`conditionalExpression > 三元表达式__(0) 1`] = `
[
  {
    "message": "只能是使用三元和逻辑表达式符号 == != > < >= <= && ||",
  },
  {
    "message": "真结果需要是函数调用并且不能再返回逻辑表达式了",
  },
  {
    "message": "假结果需要是函数调用并且不能再返回逻辑表达式了",
  },
]
`;

exports[`conditionalExpression > 三元表达式__(1) 1`] = `
[
  {
    "message": "真结果需要是函数调用并且不能再返回逻辑表达式了",
  },
  {
    "message": "假结果需要是函数调用并且不能再返回逻辑表达式了",
  },
]
`;

exports[`conditionalExpression > 三元表达式__(2) 1`] = `[]`;

exports[`conditionalExpression > 不支持三元表达式嵌套__(4) 1`] = `
[
  {
    "message": "不支持在直接嵌套Conditional函数和三元表达式,但是可以在搭配逻辑表达式使用",
  },
]
`;

exports[`conditionalExpression > 支持三元表达式嵌套搭配逻辑表达式__(5) 1`] = `[]`;

exports[`expressionStatement > 作为root的三元表达__(4) 1`] = `[]`;

exports[`expressionStatement > 作为root的条件表达式-1__(0) 1`] = `[]`;

exports[`expressionStatement > 作为root的条件表达式-2__(1) 1`] = `
[
  {
    "message": "最外层只能是函数调用或者运算或者三元表达在或者是数值",
  },
]
`;

exports[`expressionStatement > 作为root的条件表达式-3__(2) 1`] = `
[
  {
    "message": "最外层只能是函数调用或者运算或者三元表达在或者是数值",
  },
]
`;

exports[`expressionStatement > 作为root的运算-1__(5) 1`] = `[]`;

exports[`expressionStatement > 作为root的逻辑-2__(3) 1`] = `
[
  {
    "message": "当前最终运算得出的可能是一个布尔值，请检查",
  },
]
`;

exports[`literal > 一个字符__(1) 1`] = `
[
  {
    "message": "字符串只能出现在调用里",
  },
]
`;

exports[`literal > 一个数值__(0) 1`] = `[]`;

exports[`literal > 函数中作为字符串__(9) 1`] = `[]`;

exports[`literal > 数值在 !=  逻辑符中__(2) 1`] = `[]`;

exports[`literal > 数值在 *  运算符中__(7) 1`] = `[]`;

exports[`literal > 数值在 +  运算符中__(4) 1`] = `[]`;

exports[`literal > 数值在 /  运算符中__(6) 1`] = `[]`;

exports[`literal > 数值在 -  运算符中__(5) 1`] = `[]`;

exports[`literal > 数值在函数中作为数值__(3) 1`] = `
[
  {
    "message": "参数需要是字符串",
  },
]
`;

exports[`literal > 数值在括号中__(8) 1`] = `[]`;

exports[`logicalExpression > || 号运算 作为Root__(2) 1`] = `
[
  {
    "message": "逻辑表达式两边需要是条件表达式 使用 && 或者 || 连接 ",
  },
]
`;

exports[`logicalExpression > 逻辑运算在三元表达式中__(0) 1`] = `[]`;

exports[`logicalExpression > 逻辑运算在三元表达式中__(1) 1`] = `
[
  {
    "message": "逻辑表达式两边需要是条件表达式 使用 && 或者 || 连接 ",
  },
]
`;
